[project]
name = "aiida-mlip"
version = "0.3.0"
description = "Machine learning interatomic potentials AiiDA plugin"
authors = [
    { name = "Federica Zanca" },
    { name = "Elliott Kasoar" },
    { name = "Jacob Wilkins" },
    { name = "Alin M. Elena" },
]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Development Status :: 5 - Production/Stable",
    "Framework :: AiiDA"
]
readme = "README.md"
keywords = ["aiida", "plugin"]

dependencies = [
    "aiida-core<3,>=2.7",
    "ase<4.0,>=3.24",
    "voluptuous<1,>=0.15.2",
    "janus-core<0.8,>=0.7.5",
    "aiida-workgraph<0.7, >=0.6.0",
]

[project.optional-dependencies]
mace = [
    "janus-core[mace]"
]

[project.urls]
repository = "https://github.com/stfc/aiida-mlip/"
documentation = "https://stfc.github.io/aiida-mlip/"
source = "https://github.com/aiidateam/aiida-mlip"

[dependency-groups]
dev = [
    "coverage[toml]<8.0.0,>=7.4.1",
    "ipykernel>=6.30.0",
    "pgtest<2.0.0,>=1.3.2",
    "pytest<9.0,>=8.0",
    "pytest-cov<5.0.0,>=4.1.0",
    "tox-uv<2.0,>=1.25.0",
    "wheel<1.0,>=0.42",
]

docs = [
    "furo<2025.0.0,>=2024.1.29",
    "markupsafe<2.1",
    "numpydoc<2.0.0,>=1.6.0",
    "sphinx<8.0.0,>=7.2.6",
    "sphinxcontrib-contentui<1.0.0,>=0.2.5",
    "sphinxcontrib-details-directive<1.0,>=0.1",
    "sphinx-copybutton<1.0.0,>=0.5.2",
]

pre-commit = [
    "pre-commit<4.0.0,>=3.6.0",
    "ruff<1.0.0,>=0.9.2",
]

[build-system]
requires = ["uv_build>=0.8.4,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "aiida_mlip"
module-root = ""

[project.entry-points."aiida.data"]
"mlip.modeldata" = "aiida_mlip.data.model:ModelData"
"mlip.config" = "aiida_mlip.data.config:JanusConfigfile"

[project.entry-points."aiida.calculations"]
"mlip.sp" = "aiida_mlip.calculations.singlepoint:Singlepoint"
"mlip.opt" = "aiida_mlip.calculations.geomopt:GeomOpt"
"mlip.md" = "aiida_mlip.calculations.md:MD"
"mlip.train" = "aiida_mlip.calculations.train:Train"
"mlip.descriptors" = "aiida_mlip.calculations.descriptors:Descriptors"

[project.entry-points."aiida.parsers"]
"mlip.sp_parser" = "aiida_mlip.parsers.sp_parser:SPParser"
"mlip.opt_parser" = "aiida_mlip.parsers.opt_parser:GeomOptParser"
"mlip.md_parser" = "aiida_mlip.parsers.md_parser:MDParser"
"mlip.train_parser" = "aiida_mlip.parsers.train_parser:TrainParser"
"mlip.descriptors_parser" = "aiida_mlip.parsers.descriptors_parser:DescriptorsParser"

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
python_files = "test_*.py example_*.py"
addopts = '--cov-report xml'
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore:Creating AiiDA configuration folder:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:yaml:",
]
pythonpath = ["."]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source=["aiida_mlip"]

[tool.numpydoc_validation]
# report on all checks, except the below
checks = [
    "all",
    "EX01",
    "SA01",
    "ES01",
]
# Don't report on objects that match any of these regex
exclude = [
    ".__weakref__$",
    ".__repr__$",
]

[tool.ruff]
extend-exclude = ["conf.py", "*.ipynb"]
target-version = "py310"

[tool.ruff.lint]
# Ignore complexity, non-lowercase
ignore = ["C901", "N806"]
select = [
    # flake8-bugbear
    "B",
    # pylint
    "C", "R",
    # pydocstyle
    "D",
    # pycodestyle
    "E", "W",
    # Pyflakes
    "F",
    # pyupgrade
    "I",
    # pep8-naming
    "N",
    # isort
    "UP",
]

[tool.ruff.lint.isort]
force-sort-within-sections = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.pylint]
max-args = 10

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = false

[tool.uv]
default-groups = [
    "dev",
    "docs",
    "pre-commit",
]
