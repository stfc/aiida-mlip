[tool.poetry]
name = "aiida-mlip"
version = "0.1.0a0"
description = "machine learning interatomic potentials aiida plugin"
authors = [
    "Federica Zanca",
    "Elliott Kasoar",
    "Jacob Wilkins",
    "Alin M. Elena",
]
license = "LICENSE"
readme = "README.md"
packages = [{include = "aiida_mlip"}]
classifiers = [
    "Programming Language :: Python",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD 3-Clause License",
    "Natural Language :: English",
    "Development Status :: 3 - Alpha",
    "Framework :: AiiDA"
]
keywords = ["aiida", "plugin"]
repository = "https://github.com/stfc/aiida-mlip/"
documentation = "https://stfc.github.io/aiida-mlip/"

[tool.poetry.urls]
"Source" = "https://github.com/aiidateam/aiida-mlip"

[tool.poetry.dependencies]
python = "^3.9"
aiida-core = "^2.5"
voluptuous = "^0.14"

[tool.poetry.group.dev.dependencies]
coverage = {extras = ["toml"], version = "^7.4.1"}
pgtest = "^1.3.2"
pytest = "^8.0"
pytest-cov = "^4.1.0"
wheel = "^0.42"

[tool.poetry.group.pre-commit]
optional = true
[tool.poetry.group.pre-commit.dependencies]
black = "^24.1.1"
pre-commit = "^3.6.0"
pylint = "^2.15.10"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
furo = "^2024.1.29"
markupsafe = "<2.1"
sphinx = "^7.2.6"
sphinxcontrib-contentui = "^0.2.5"
sphinxcontrib-details-directive = "^0.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.plugins] # Optional super table

[tool.poetry.plugins."aiida.data"]
"mlip" = "aiida_mlip.data:DiffParameters"

[tool.poetry.plugins."aiida.calculations"]
"mlip" = "aiida_mlip.calculations:DiffCalculation"

[tool.poetry.plugins."aiida.parsers"]
"mlip" = "aiida_mlip.parsers:DiffParser"

[tool.poetry.plugins."aiida.cmdline.data"]
"mlip" = "aiida_mlip.cli:data_cli"

[tool.pylint.format]
max-line-length = 125

[tool.pylint.messages_control]
disable = [
    "too-many-ancestors",
    "invalid-name",
    "duplicate-code",
]

[tool.pytest.ini_options]
# Configuration for [pytest](https://docs.pytest.org)
python_files = "test_*.py example_*.py"
filterwarnings = [
    "ignore::DeprecationWarning:aiida:",
    "ignore:Creating AiiDA configuration folder:",
    "ignore::DeprecationWarning:plumpy:",
    "ignore::DeprecationWarning:yaml:",
]

[tool.coverage.run]
# Configuration of [coverage.py](https://coverage.readthedocs.io)
# reporting which lines of your plugin are covered by tests
source=["aiida_mlip"]

[tool.isort]
# Configuration of [isort](https://isort.readthedocs.io)
line_length = 120
force_sort_within_sections = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'AIIDA', 'FIRSTPARTY', 'LOCALFOLDER']
known_aiida = ['aiida']

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39

[testenv]
usedevelop=True

[testenv:py{39,310,311,312}]
description = Run the test suite against a python version
extras = testing
commands = pytest {posargs}

[testenv:pre-commit]
description = Run the pre-commit checks
extras = pre-commit
commands = pre-commit run {posargs}

[testenv:docs]
description = Build the documentation
extras = docs
commands = sphinx-build -nW --keep-going -b html {posargs} docs/source docs/build/html
commands_post = echo "open file://{toxinidir}/docs/build/html/index.html"
"""
