name: ci

on: [push, pull_request]

jobs:

  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        aiida-version: ["stable"]

    services:
      postgres:
        image: postgres:10
        env:
          POSTGRES_DB: test_aiida
          POSTGRES_PASSWORD: ''
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          uv sync --all-extras

      - name: Run test suite
        env:
          # show timings of tests
          PYTEST_ADDOPTS: "--durations=0"
        run: uv run pytest --cov aiida_mlip --cov-append .

      - name: Report coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          parallel: true
          flag-name: run-${{ matrix.python-version }}
          file: coverage.xml
          base-path: aiida_mlip

  coverage:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Close parallel build
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true

  docs:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Build docs
        run: uv run make html
        working-directory: ./docs/

  pre-commit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.14"
          python-version: "3.12"

      - name: Install dependencies
        run: uv sync

      - name: Run pre-commit
        run: |
          uv run pre-commit install
          uv run pre-commit run --all-files || ( git status --short ; git diff ; exit 1 )
